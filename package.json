{
    "name": "express-ts-sql",
    "title": "express typescript boilerplate with sql db",
    "version": "0.0.0",
    "description": "Ready to use boilerplate with sql database integrated using orm sequelize",
    "main": "dist/src/index.js",
    "types": "dist/src/index.d.ts",
    "scripts": {
        "build": "tsc --build ./tsconfig.json",
        "prebuild": "rm -rf ./dist",
        "start": "NODE_ENV=production TS_NODE_PROJECT=./tsconfig.json  NODE_EXTRA_CA_CERTS=./src/service/proxy/certs/all.pem  node -r ts-node/register/transpile-only -r tsconfig-paths/register dist/src/index",
        "start:debug": "TS_NODE_FILES=true TS_NODE_PROJECT=./tsconfig.json  NODE_EXTRA_CA_CERTS=./src/service/proxy/certs/all.pem  node -r ts-node/register -r tsconfig-paths/register  --inspect=localhost:9229  src/index",
        "start:dev": "./script/ts-node.sh src/index",
        "test": "NODE_ENV=test DOTENV_CONFIG_PATH=$(pwd)/test/.env NODE_EXTRA_CA_CERTS=./src/service/proxy/certs/all.pem node --expose-gc --max-old-space-size=6044  node_modules/.bin/jest  --logHeapUsage  -i --detectOpenHandles --forceExit --config jest.config.js",
        "test:build": "yarn run prebuild  &&  tsc --build ./tsconfig.spec.json",
        "test:ci": "NODE_ENV=ci DOTENV_CONFIG_PATH=$(pwd)/test/.env NODE_EXTRA_CA_CERTS=./src/service/proxy/certs/all.pem  node --expose-gc --max-old-space-size=6044  node_modules/.bin/jest  --logHeapUsage  --ci -i --detectOpenHandles --forceExit --config jest.config.js",
        "test:debug": "NODE_ENV=test DOTENV_CONFIG_PATH=$(pwd)/test/.env NODE_EXTRA_CA_CERTS=./src/service/proxy/certs/all.pem  node --inspect=localhost:9229 --inspect-brk  node_modules/.bin/jest  --no-coverage  --ci -i --detectOpenHandles --forceExit --config jest.config.js",
        "test:only": "NODE_ENV=test DOTENV_CONFIG_PATH=$(pwd)/test/.env TERM=dumb NODE_EXTRA_CA_CERTS=./src/service/proxy/certs/all.pem  node --max-old-space-size=6044  node_modules/.bin/jest  -i --no-coverage --no-verbose  --detectOpenHandles --forceExit --config jest.config.js",
        "test:repl": "NODE_ENV=test DOTENV_CONFIG_PATH=$(pwd)/test/.env NODE_EXTRA_CA_CERTS=./src/service/proxy/certs/all.pem  node debug  node_modules/.bin/jest  --no-coverage  --ci -i --detectOpenHandles --forceExit --config jest.config.js",
        "test:setup": "NODE_ENV=test DOTENV_CONFIG_PATH=$(pwd)/test/.env  ./script/testSetup.sh",
        "lint": "eslint . --ext .ts",
        "lint:fix": "eslint . --ext .ts --fix",
        "format": "prettier --write src/**/*.ts"
    },
    "author": "MindPath – Intelligent Solutions <engineering@mindpathtech.com>",
    "homepage": "",
    "repository": {
        "type": "git",
        "url": ""
    },
    "keywords": [],
    "license": "MIT",
    "maintainers": [
        "MindPath – Intelligent Solutions <engineering@mindpathtech.com>"
    ],
    "dependencies": {
        "cors": "^2.8.5",
        "express": "^4.17.1",
        "http-status-codes": "^2.1.4",
        "tsconfig-paths": "^3.10.1"
    },
    "devDependencies": {
        "@types/cors": "^2.8.12",
        "@types/express": "^4.17.13",
        "@types/node": "^16.6.1",
        "@typescript-eslint/eslint-plugin": "^4.29.2",
        "@typescript-eslint/parser": "^4.29.2",
        "dotenv": "^10.0.0",
        "eslint": "^7.32.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-plugin-prettier": "^3.4.1",
        "prettier": "^2.3.2",
        "ts-node": "^10.2.0",
        "tslint": "^6.1.3",
        "typescript": "^4.3.5"
    },
    "files": [
        "dist/src/*",
        "README.md"
    ],
    "bugs": {
        "url": "https://github.com/mindpath-tech/logger/issues"
    }
}
